@page "/hero"
@page "/hero/{id:int}"
@using SuperHerores.Shared
@inject ISuperheroService SuperHeroService

@if (Id == null)
{
    <PageTitle>Create Hero</PageTitle>
    <h3>Create</h3>
}
else
{
    <PageTitle>Edit Hero</PageTitle>
    <h3>Edit @Superhero.HeroName</h3>
}

<EditForm Model="Superhero" OnSubmit="HandleSubmit">
    <div class="container">
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="Superhero.FirstName" class="form-control"></InputText>
    </div>
    <div class="container">
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="Superhero.LastName" class="form-control"></InputText>
    </div>
    <div class="container">
        <label for="heroname">Hero Name</label>
        <InputText id="heroname" @bind-Value="Superhero.HeroName" class="form-control"></InputText>
    </div>
    <div class="container">
        <label for="comicname">Comic Name</label>
        <InputSelect @bind-Value="Superhero.ComicId" class="form-select">
            @foreach (var comic in SuperHeroService.Comics)
            {
                <option value="@comic.Id">@comic.Name</option>
            }
        </InputSelect>
    </div>

    <br />

    <div class="container">
        <button type="submit" @onclick="HandleSubmit" class="btn btn-primary">
            @if (Id == null)
            {
                <span>Create</span>
            }
            else
            {
                <span>Save</span>
            }
        </button>
    </div>
</EditForm>



@code {

    [Parameter]
    public int? Id { get; set; }

    // Create New Hero
    private Superhero Superhero { get; set; } = new Superhero { Comic = new Comic() };

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            Superhero = await SuperHeroService.GetSingleSuperhero(Id.Value);
            await SuperHeroService.GetComics();
        }
    }

    private async void HandleSubmit()
    {

    }
}

